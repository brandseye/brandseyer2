% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_language.R
\name{with_mention_order}
\alias{with_mention_order}
\title{Order results from fetching or counting mentions}
\usage{
with_mention_order(.account, ..., .envir)
}
\arguments{
\item{.account}{An account or \code{\link[=query]{query()}} object.}

\item{...}{The fields to order by.}

\item{.envir}{The environment to perform substitutions in.}
}
\value{
A \code{\link[=query]{query()}} object.
}
\description{
\code{\link[=with_mention_order]{with_mention_order()}} allows you to specify the order of returned
mentions or the order of counted mentions. This does not
preclude you from reordering mentions using \code{\link[dplyr:arrange]{dplyr::arrange()}}.
This is part of the \code{\link[=query]{query()}} language.
}
\examples{

account("TEST01AA") \%>\%
  filter_mentions("published inthelast week") \%>\%
  group_mentions_by(mentionCount, totalOTS) \%>\%
  with_mention_order(totalOTS)
}
\seealso{
Other verbs for the query language: \code{\link[=group_mentions_by]{group_mentions_by()}},
\code{\link[=compare_mentions]{compare_mentions()}}, \code{\link[=filter_mentions]{filter_mentions()}}, \code{\link[=filter_mentions]{filter_mentions()}}, \code{\link[=with_account]{with_account()}}.

\code{\link[=query]{query()}} is a way to manually create queries.
}
